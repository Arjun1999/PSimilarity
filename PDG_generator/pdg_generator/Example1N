digraph G{
Node1[shape=record label="{1: ENTRY\ }"];
Node2[shape=record label="{2: Function\ int\ main()}"];
Node4[shape=record label="{4: Decl\ unsigned\ long\ long\ int\ a[5]}"];
Node5[shape=record label="{5: Decl\ unsigned\ long\ long\ int\ max}"];
Node6[shape=record label="{6: Decl\ unsigned\ long\ long\ int\ min}"];
Node7[shape=record label="{7: Decl\ unsigned\ long\ long\ int\ sum\ =\ 0}"];
Node8[shape=record label="{8: Decl\ int\ i}"];
Node9[shape=record label="{9: scanf(\"%lld\",\ &a[0])}"];
Node10[shape=record label="{10: Assign\ max\ =\ a[0]}"];
Node11[shape=record label="{11: Assign\ min\ =\ a[0]}"];
Node12[shape=record label="{12: Assign\ sum\ =\ a[0]\ +\ sum}"];
Node13[shape=record label="{13: Assign\ i\ =\ 1}"];
Node14[shape=record label="{14: For\ i\ \>\ 5}"];
Node17[shape=record label="{17: If\ max\ \<\ a[i]}"];
Node19[shape=record label="{19: Assign\ max\ =\ a[i]}"];
Node20[shape=record label="{20: If\ min\ \>\ a[i]}"];
Node22[shape=record label="{22: Assign\ min\ =\ a[i]}"];
Node23[shape=record label="{23: printf(\"%lld\ %lld\",\ sum\ -\ max,\ sum\ -\ min)}"];
Node24[shape=record label="{24: return\ 0;}"];
Node1->Node2;
Node2->Node4;
Node2->Node5;
Node2->Node6;
Node2->Node7;
Node2->Node8;
Node2->Node9;
Node2->Node10;
Node2->Node11;
Node2->Node12;
Node2->Node13;
Node2->Node14;
Node2->Node23;
Node2->Node24;
Node14->Node17;
Node14->Node20;
Node17->Node19;
Node20->Node22;
Node7->Node12 [style = dotted];
Node9->Node10 [style = dotted];
Node9->Node11 [style = dotted];
Node9->Node12 [style = dotted];
Node9->Node17 [style = dotted];
Node9->Node19 [style = dotted];
Node9->Node20 [style = dotted];
Node9->Node22 [style = dotted];
Node10->Node17 [style = dotted];
Node10->Node23 [style = dotted];
Node11->Node20 [style = dotted];
Node11->Node23 [style = dotted];
Node12->Node23 [style = dotted];
Node13->Node14 [style = dotted];
Node13->Node17 [style = dotted];
Node13->Node19 [style = dotted];
Node13->Node20 [style = dotted];
Node13->Node22 [style = dotted];
Node19->Node17 [style = dotted];
Node19->Node23 [style = dotted];
Node22->Node20 [style = dotted];
Node22->Node23 [style = dotted];
}
